/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.itn.librarymanagementsystem;

import com.itn.librarymanagementsystem.dao.BookDao;
import com.itn.librarymanagementsystem.entity.Book;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ITN
 */
public class BooksPanel extends javax.swing.JPanel {

    /**
     * Creates new form booksPanel
     */
    ArrayList<Book> bookList; 
    private boolean editBook = false;
    private Book selectedBook;
    
    public BooksPanel() {
        initComponents();
        createTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        booksManagementPanel = new javax.swing.JPanel();
        bookManagementLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        authorField = new javax.swing.JTextField();
        authorLabel = new javax.swing.JLabel();
        genreLabel = new javax.swing.JLabel();
        editionField = new javax.swing.JTextField();
        priceLabel = new javax.swing.JLabel();
        isbnField = new javax.swing.JTextField();
        isbnLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        fictionCB = new javax.swing.JCheckBox();
        thrillerCB = new javax.swing.JCheckBox();
        romanceCB = new javax.swing.JCheckBox();
        dramaCB = new javax.swing.JCheckBox();
        historyCB = new javax.swing.JCheckBox();
        religionCB = new javax.swing.JCheckBox();
        biographyCB = new javax.swing.JCheckBox();
        otherCB = new javax.swing.JCheckBox();
        nameField = new javax.swing.JTextField();
        authorLabel1 = new javax.swing.JLabel();
        editionLabel1 = new javax.swing.JLabel();
        priceField = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        addBookButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        bookDisplayLabel = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();

        booksManagementPanel.setBackground(new java.awt.Color(153, 255, 153));

        bookManagementLabel.setFont(new java.awt.Font("Segoe Print", 0, 16)); // NOI18N
        bookManagementLabel.setForeground(new java.awt.Color(0, 0, 255));
        bookManagementLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bookManagementLabel.setText("Book Management");

        jSeparator1.setOpaque(true);

        jLabel1.setBackground(new java.awt.Color(255, 255, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add New Book Details");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setOpaque(true);

        authorLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        authorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        authorLabel.setText("Author");

        genreLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        genreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        genreLabel.setText("Genre");

        priceLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        priceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        priceLabel.setText("Price");

        isbnField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnFieldActionPerformed(evt);
            }
        });

        isbnLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        isbnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        isbnLabel.setText("ISBN");

        quantityLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        quantityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantityLabel.setText(" Quantity");

        fictionCB.setText("Fiction");

        thrillerCB.setText("Thriller");

        romanceCB.setText("Romance");

        dramaCB.setText("Drama");

        historyCB.setText("History");

        religionCB.setText("Religion");

        biographyCB.setText("Biography");

        otherCB.setText("Other");

        authorLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        authorLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        authorLabel1.setText("Name");

        editionLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        editionLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editionLabel1.setText("Edition");

        dateLabel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("Date");

        dateField.setText("YYYY-MM-DD");
        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });

        addBookButton.setBackground(new java.awt.Color(255, 255, 102));
        addBookButton.setText("Submit");
        addBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout booksManagementPanelLayout = new javax.swing.GroupLayout(booksManagementPanel);
        booksManagementPanel.setLayout(booksManagementPanelLayout);
        booksManagementPanelLayout.setHorizontalGroup(
            booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)
            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(booksManagementPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                                .addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                                .addComponent(authorLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                                .addComponent(isbnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(isbnField)))
                        .addGap(144, 144, 144)
                        .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                                .addComponent(editionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(editionField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                                .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(booksManagementPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(booksManagementPanelLayout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(bookManagementLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(booksManagementPanelLayout.createSequentialGroup()
                        .addComponent(genreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fictionCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(thrillerCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(romanceCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dramaCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(historyCB))
                    .addGroup(booksManagementPanelLayout.createSequentialGroup()
                        .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(religionCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(biographyCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(otherCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        booksManagementPanelLayout.setVerticalGroup(
            booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(booksManagementPanelLayout.createSequentialGroup()
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookManagementLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editionField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isbnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isbnField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(booksManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fictionCB)
                    .addComponent(thrillerCB)
                    .addComponent(romanceCB)
                    .addComponent(dramaCB)
                    .addComponent(historyCB)
                    .addComponent(religionCB)
                    .addComponent(biographyCB)
                    .addComponent(otherCB)
                    .addComponent(addBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);

        bookDisplayLabel.setBackground(new java.awt.Color(255, 255, 153));
        bookDisplayLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bookDisplayLabel.setForeground(new java.awt.Color(255, 0, 0));
        bookDisplayLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bookDisplayLabel.setText("Display All Books");
        bookDisplayLabel.setToolTipText("");
        bookDisplayLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bookDisplayLabel.setOpaque(true);

        editButton.setBackground(new java.awt.Color(255, 255, 153));
        editButton.setForeground(new java.awt.Color(255, 51, 51));
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 255, 153));
        deleteButton.setForeground(new java.awt.Color(255, 51, 51));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new java.awt.Color(255, 255, 153));
        refreshButton.setForeground(new java.awt.Color(255, 51, 51));
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(booksManagementPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bookDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(booksManagementPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void isbnFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isbnFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isbnFieldActionPerformed

    private void addBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookButtonActionPerformed
        // TODO add your handling code here:
//        Book book = new Book();
        if(!editBook){
        Book book = new Book();
        
        // For text fields
        book.setName(nameField.getText());
        book.setAuthor(authorField.getText());
        book.setAddedDate(Date.valueOf(dateField.getText()));
        book.setEdition(editionField.getText());
        book.setIsbn(isbnField.getText());
        book.setPrice(Double.parseDouble(priceField.getText()));
        book.setQuantity(Integer.parseInt(quantityField.getText()));
        
        // for checkbox
        String interest = "";
        int count = 0;
        
        
        if(fictionCB.isSelected()){
            interest = interest.concat("Fiction ");
            count++;
            
        }
        if(thrillerCB.isSelected()){
            interest =  count != 0? interest.concat(", Thriller"):interest.concat("Thriller") ;
             count++;
        }
        
        if(romanceCB.isSelected()){
            interest =  count != 0? interest.concat(", Romance"):interest.concat("Romance") ;
            count++;
        }
        
        if(dramaCB.isSelected()){
            interest =  count != 0? interest.concat(", Drama"):interest.concat("Drama") ;
            count++;
        }
        
        if(historyCB.isSelected()){
            interest =  count != 0? interest.concat(", History"):interest.concat("History") ;
             count++;
        }
        
        if(religionCB.isSelected()){
            interest = count != 0 ? interest.concat(", Religion") : interest.concat("Religion");
             count++;
        }
        
        if(biographyCB.isSelected()){
            interest =  count != 0? interest.concat(", Biography"):interest.concat("Biography") ;
             count++;
        }
        
        if(otherCB.isSelected()){
            interest =  count != 0? interest.concat(", Other"):interest.concat("Other") ;
             count++;
        }
        
        book.setGenre(interest);
        
        boolean success = new BookDao().addBook(book);
          if(success){
            JOptionPane.showMessageDialog(this, "Book added successfully! ");
        }
        else{
            JOptionPane.showMessageDialog(this, "Book cannot be added");
        }
      }
         else{
        
        selectedBook.setName(nameField.getText());
        selectedBook.setAuthor(authorField.getText());
        selectedBook.setIsbn(isbnField.getText());
        selectedBook.setEdition(editionField.getText());
        selectedBook.setQuantity(Integer.parseInt(quantityField.getText()));
        selectedBook.setPrice(Double.parseDouble(priceField.getText()));
        selectedBook.setAddedDate(Date.valueOf(dateField.getText()));
        
         String interest = "";
        int count = 0;
        
        
        if(fictionCB.isSelected()){
            interest = interest.concat("Fiction ");
            count++;
            
        }
        if(thrillerCB.isSelected()){
            interest =  count != 0? interest.concat(", Thriller"):interest.concat("Thriller") ;
             count++;
        }
        
        if(romanceCB.isSelected()){
            interest =  count != 0? interest.concat(", Romance"):interest.concat("Romance") ;
            count++;
        }
        
        if(dramaCB.isSelected()){
            interest =  count != 0? interest.concat(", Drama"):interest.concat("Drama") ;
            count++;
        }
        
        if(historyCB.isSelected()){
            interest =  count != 0? interest.concat(", History"):interest.concat("History") ;
             count++;
        }
        
        if(religionCB.isSelected()){
            interest = count != 0 ? interest.concat(", Religion") : interest.concat("Religion");
             count++;
        }
        
        if(biographyCB.isSelected()){
            interest =  count != 0? interest.concat(", Biography"):interest.concat("Biography") ;
             count++;
        }
        
        if(otherCB.isSelected()){
            interest =  count != 0? interest.concat(", Other"):interest.concat("Other") ;
             count++;
        }
        
        selectedBook.setGenre(interest);
        
        boolean success = new BookDao().editBook(selectedBook);
        if(success){
            JOptionPane.showMessageDialog(this, "Book edited successfully! ");
        }
        else{
            JOptionPane.showMessageDialog(this, "Book cannot be edited! ");
        }     
      }
    }//GEN-LAST:event_addBookButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        editBook = true;
        if(selectedBook != null){
        clearForm();
        nameField.setText(selectedBook.getName());
        authorField.setText(selectedBook.getAuthor());
        editionField.setText(selectedBook.getEdition());
        dateField.setText(String.valueOf(selectedBook.getAddedDate()));
        quantityField.setText(String.valueOf(selectedBook.getQuantity()));
        priceField.setText(String.valueOf(selectedBook.getPrice()));
        isbnField.setText(selectedBook.getIsbn());
        
        // For checkbox
        String genre = selectedBook.getGenre();
        if(genre.contains("Fiction")){
            fictionCB.setSelected(true);
        }
        if(genre.contains("Drama")){
            dramaCB.setSelected(true);
        }
        if(genre.contains("Romance")){
            romanceCB.setSelected(true);
        }
        if(genre.contains("History")){
            historyCB.setSelected(true);
        }
        if(genre.contains("Biography")){
            biographyCB.setSelected(true);
        }
        if(genre.contains("Thriller")){
            thrillerCB.setSelected(true);
        }
        if(genre.contains("Religion")){
            religionCB.setSelected(true);
        }
        if(genre.contains("Other")){
            otherCB.setSelected(true);
        }
        }
        else{
            JOptionPane.showMessageDialog(this, "No record selected");
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        // TODO add your handling code here:
          int row = bookTable.getSelectedRow();
        
        System.out.println("Row selected: " + bookList.get(row).getName());
        selectedBook = bookList.get(row);
    }//GEN-LAST:event_bookTableMouseClicked

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        clearForm();
        createTable();
        selectedBook = null;
        repaint();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
         if(selectedBook == null){
             JOptionPane.showMessageDialog(this, "No record selected");
        }
        else{
           boolean success = new BookDao().deleteInfo(selectedBook);
           if(success){
               JOptionPane.showMessageDialog(this, "Selected Member Deleted Successfully! ");
           }
           else{
               JOptionPane.showMessageDialog(this, "Member Cannot be Deleted");
           }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    public final void createTable(){
         bookList = new BookDao().getAllBooks();
        
        Object[][] data = new Object[bookList.size()][9];
        String[] header = {"ID", "Book Name", "Author", "Genre", "ISBN", "Edition", "Price(Rs)", "Added Date", "Quantity"};
        int count = 0;
        for(Book m : bookList){
            data[count] = new Object[]{m.getId(),
                                       m.getName(),
                                       m.getAuthor(),
                                       m.getGenre(),
                                       m.getIsbn(),
                                       m.getEdition(),
                                       m.getPrice(),
                                       m.getAddedDate(),
                                       m.getQuantity()};
            count++;
        }
        
        bookTable.setModel(new DefaultTableModel(data, header));
    }
    
    public void clearForm(){
        nameField.setText("");
        isbnField.setText("");
        authorField.setText("");
        editionField.setText("");
        dateField.setText("");
        quantityField.setText("");
        priceField.setText("");
        fictionCB.setSelected(false);
        romanceCB.setSelected(false);
        thrillerCB.setSelected(false);
        dramaCB.setSelected(false);
        historyCB.setSelected(false);
        religionCB.setSelected(false);
        biographyCB.setSelected(false);
        otherCB.setSelected(false); 
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookButton;
    private javax.swing.JTextField authorField;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JLabel authorLabel1;
    private javax.swing.JCheckBox biographyCB;
    private javax.swing.JLabel bookDisplayLabel;
    private javax.swing.JLabel bookManagementLabel;
    private javax.swing.JTable bookTable;
    private javax.swing.JPanel booksManagementPanel;
    private javax.swing.JTextField dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JCheckBox dramaCB;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField editionField;
    private javax.swing.JLabel editionLabel1;
    private javax.swing.JCheckBox fictionCB;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JCheckBox historyCB;
    private javax.swing.JTextField isbnField;
    private javax.swing.JLabel isbnLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nameField;
    private javax.swing.JCheckBox otherCB;
    private javax.swing.JTextField priceField;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField quantityField;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JCheckBox religionCB;
    private javax.swing.JCheckBox romanceCB;
    private javax.swing.JCheckBox thrillerCB;
    // End of variables declaration//GEN-END:variables
}
